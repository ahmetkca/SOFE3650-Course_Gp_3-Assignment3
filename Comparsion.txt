Method 1: Standard implementation 
Advantages:
  Provides the usser an interface (scanner/ keyboard) which utilizes the cash register to display the out put which correlates to the entired inputs. Has multiple input methods
  which provides covrage for input errors.
Disadvantages:
  Heavily relies on the cash register for all primary functions.
  
Method 2: TicketPrinter and Display inherit view interface. 
Advantages:
  Adds a uniform intrface for displaying product information using the display and ticket printer.
Disadvantages:
  
  
Method 3: TicketPrinter and Display act as observers of CashRegister.
Advantages:
  Increases coherancy of TicketPrinter/ Display with the CashRegister, betteer utilizes the display to update with the most current purchase iteams.  
disadvantages:
  type here.
  
 Conclusion:
  In clonclusion method 2 and 3 add valuable traits to the cash register program which increases its usability and reliability. 

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

For the first two methods that were applied to this assignment, there were some pros and cons that had to be considered when it came to time efficiency. Firstly in the Exercise 1 Challenge, the program works by displaying the different options and the user would have to choose their product of choice. For instance, when the user sees the keyboard option being displayed, it would have to manually type out the UPC code so that it would return the name of the product and the price. Although this challenge allowed instantiation, there were some disadvantages that resulted due to time efficiency. Since every product is being input into the program, it would print out the ticket and output that product.  By doing so, the first challenge would be instantiating every type of view (ex. display, ticket printer, etc) and would soon become redundant. Meanwhile, this will also take lots of time and the DB class would have difficulty in managing the products

On the other hand, method two has some improvements being made compared to method one. This one allows the use of a View Interface that can be used to many advantages. The View interface allows objects to be passed only one time as the user selects their products in preference. It is also more extendable since more views can be implemented for a variety of objects. By doing so, the program will not have to instantiate and the Scanner can view other types of views being displayed in the terminal. Also, different types of views can be easily added by adopting the interface hence making them more flexible and avoids redundancy.

Lastly, the observer pattern can be applicable to many real-life applications. The observer pattern is a type of design pattern that describes the mechanism of one object which can be used to communicate with other objects involved in the process. This type of pattern can be considered as a one-to-many relationship where one object may call on multiple objects being.
 However, there are a few disadvantages as to why this type of pattern is not as effective for applications. First of all, it does not implement the use of composition, as the Observer interface can be instantiated. Also, if a method were implemented correctly, this will result in the parent class having complexity issues which may also lead to its performance.
